(custom-set-variables
 '(c-basic-offset 2)
 '(c-default-style (quote ((java-mode . "java") (other . "knr"))))
 '(c-label-minimum-indentation 1)
 '(c-offsets-alist (quote ((substatement-open . 0) (inline-open . 0))))
 '(c-style-variables-are-local-p t)
 '(c-tab-always-indent nil)
 '(column-number-mode t)
 '(font-lock-mode t nil (font-lock))
 '(gnuserv-program (concat exec-directory "/gnuserv"))
 '(gutter-buffers-tab-visible-p nil)
 '(indent-tabs-mode nil)
 '(line-number-mode t)
 '(modeline-3d-p t)
 '(modeline-scrolling-method (quote scrollbar))
 '(mouse-yank-at-point t)
 '(paren-mode (quote blink-paren) nil (paren))
 '(php-file-patterns (quote ("\\.php[s34]?\\'" "\\.phtml\\'" "\\.class\\'")) t)
 '(py-tab-always-indent nil)
 '(scrollbars-visible-p t)
 '(toolbar-visible-p nil)
 '(user-mail-address "tesch@cs.wisc.edu"))

(custom-set-faces
 '(default ((t (:foreground "cyan" :background "black" :size "12pt" :family "Fixed" :bold t))) t)
 '(blue ((t (:foreground "blue" :background "blue8"))) t)
 '(cperl-array-face ((((class color) (background light)) (:foreground "lightblue" :bold t))))
 '(custom-comment-face ((((class grayscale color) (background light)) (:background "blue"))))
 '(custom-comment-tag-face ((((class color) (background light)) (:foreground "light blue"))))
 '(custom-group-tag-face ((((class color) (background light)) (:foreground "red4" :background "light green" :underline t))))
 '(custom-rogue-face ((((class color)) (:foreground "white" :background "black"))))
 '(custom-state-face ((((class color) (background light)) (:foreground "green2"))))
 '(custom-variable-tag-face ((((class color) (background dark)) (:underline t :foreground "orange"))))
 '(diff-file-header-face ((((class color) (background light)) (:foreground "green4" :background "white" :bold t))))
 '(diff-header-face ((((class color) (background light)) (:foreground "black" :background "grey85"))))
 '(diff-hunk-header-face ((((class color) (background light)) (:foreground "blue" :background "grey85"))))
 '(diff-index-face ((((class color) (background light)) (:foreground "red" :background "grey70" :bold t))))
 '(dired-face-executable ((((class color)) (:foreground "green1" :background ""))))
 '(font-lock-comment-face ((t (:foreground "yellow1"))))
 '(font-lock-doc-string-face ((t (:foreground "alice blue"))))
 '(font-lock-emphasized-face ((t (:foreground "red" :background "lightyellow2"))) t)
 '(font-lock-function-name-face ((t (:foreground "white"))))
 '(font-lock-keyword-face ((((class color) (background light)) (:foreground "white"))))
 '(font-lock-other-emphasized-face ((t (:italic t :background "brown"))) t)
 '(font-lock-other-type-face ((t (:foreground "green1"))))
 '(font-lock-preprocessor-face ((t (:foreground "orange"))))
 '(font-lock-reference-face ((t (:foreground "yellow2"))))
 '(font-lock-string-face ((t (:foreground "aliceblue"))))
 '(font-lock-type-face ((t (:foreground "gold"))))
 '(font-lock-variable-name-face ((t (:foreground "lawn green"))))
 '(font-lock-warning-face ((((class color) (background light)) (:foreground "magenta"))))
 '(highlight ((t (:foreground "orange4" :background "darkgreen2"))) t)
 '(isearch ((t (:background "orange"))) t)
 '(list-mode-item-selected ((t (:foreground "black" :background "gray68"))) t)
 '(message-header-other-face ((((class color) (background dark)) (:foreground "pink"))))
 '(modeline-buffer-id ((t (:foreground "green3" :background "black"))) t)
 '(modeline-mousable-minor-mode ((t (:foreground "green" :background "Gray20"))) t)
 '(paren-blink-off ((t (:foreground "black" :background "lightblue"))) t)
 '(paren-match ((t (:foreground "yellow" :background "DeepPink"))) t)
 '(primary-selection ((t (:background "gray35"))) t)
 '(secondary-selection ((t (:foreground "red" :background "paleturquoise"))) t)
 '(text-cursor ((t (:foreground "black" :background "red"))) t)
 '(unicode-invalid-sequence-warning-face ((t (:foreground "black" :background "darkseagreen"))) t)
 '(widget-documentation-face ((((class color) (background light)) (:foreground "dark green" :background "white"))))
 '(widget-field-face ((((class grayscale color) (background light)) (:foreground "pink2" :background "brown"))))
 '(widget-inactive-face ((((class grayscale color) (background light)) (:foreground "dim grey"))))
 '(zmacs-region ((t (:background "grey35"))) t))
